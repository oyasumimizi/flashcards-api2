[{"C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\index.js":"1","C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\components\\app.jsx":"2","C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\components\\previousButtonForwardButton.jsx":"3","C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\components\\cardCollection.jsx":"4","C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\components\\flashCards.jsx":"5"},{"size":265,"mtime":1608090475357,"results":"6","hashOfConfig":"7"},{"size":3414,"mtime":1608090248058,"results":"8","hashOfConfig":"7"},{"size":732,"mtime":1607994454048,"results":"9","hashOfConfig":"7"},{"size":2029,"mtime":1607994500027,"results":"10","hashOfConfig":"7"},{"size":378,"mtime":1607994331556,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d4x2l7",{"filePath":"14","messages":"15","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\index.js",[],"C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\components\\app.jsx",["24"],"import Axios from 'axios';\r\nimport React, {Component} from 'react';\r\nimport CardCollection from './cardCollection';\r\nimport FlashCards from './flashCards';\r\n// import CardPosition from './previousButtonForwardButton';\r\n\r\n//get componentDidMount back in the component, grab data and set it into state variable, also flip loading\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            flashCardsNumber:0,\r\n            collection:0,\r\n            collectionNumber:0,\r\n            collections:[\r\n                {title: \"React\"},\r\n                {word: \"state\", definition: \"JS object that holds values for a component\"},\r\n                {word: \"props\", definition: \"A way to pass data into components on initialization\"},\r\n                {word: \"component\", definition: \"Reusable building blocks for UI using JSX\"},\r\n                {title: \"C#\"},\r\n                {word: \"variable\", definition: \"Named space in memory\"},\r\n                {word: \"class\", definition: \"Template for an object that consists of member variables, constructor, methods\"},\r\n                {word: \"object\", definition: \"Instance of a class\"}]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        Axios.get('http://localhost:5000/api/collections')\r\n        .then(res => ){\r\n            console.log(flashCards);\r\n            this.setState({ flashCards });\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n//make methods that make api calls\r\n\r\n\r\n    addNewCard(flashCards){\r\n        this.flashCards.push(flashCards);\r\n        this.setState({\r\n            flashCardsNumber: this.flashCards.length - 1\r\n        });\r\n    }\r\n\r\n    \r\n    goToNextFlashCard(){\r\n        let tempFlashCardsNumber = this.state.flashCardsNumber;\r\n        let collectionLength = this.state.collection.length;\r\n        tempFlashCardsNumber++\r\n        if(tempFlashCardsNumber === collectionLength) {\r\n            tempFlashCardsNumber = 0;\r\n        }\r\n        this.setState({\r\n            flashCardsNumber: tempFlashCardsNumber\r\n        });\r\n    }\r\n\r\n    goToPreviousFlashCard(){\r\n        let tempFlashCardsNumber = this.state.flashCardsNumber;\r\n        let collectionLength = this.state.collection.length;\r\n        collectionLength--\r\n        if(tempFlashCardsNumber < 0){\r\n            tempFlashCardsNumber = collectionLength -1;\r\n            \r\n        this.setState({\r\n            flashCardsNumber: tempFlashCardsNumber\r\n\r\n            \r\n         });\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        console.log(['collection: '], this.state.collection[this.state.collectionNumber])\r\n        console.log({loading: this.state.loading}); \r\n        return (this.state.loading ? <h1>ReactLoading type={\"bars\"} color={\"white\"}</h1>:\r\n        \r\n           \r\n           <div>\r\n               {console.log(this.state.collections)}\r\n               <FlashCards\r\n               collections = {this.collections}\r\n               collection = {this.state.collections[this.state.collectionNumber]}/>\r\n\r\n                CardPosition flashCards={this.flashCards[this.state.flashCardsNumber]} nextCard={() => this.goToNextFlashCard()} \r\n                previousFlashCard={() => this.goToPreviousFlashCard()} />)\r\n                <cardCollection addNewCardCollection={this.addNewCardCollection.bind(this)}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\components\\previousButtonForwardButton.jsx",[],"C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\components\\cardCollection.jsx",[],["25","26"],"C:\\Users\\skyla\\OneDrive\\Documents\\devCodeCamp\\github\\flashcard-api2\\flashcards-api2\\src\\components\\flashCards.jsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"27","line":32,"column":22},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 30 | \u001b[39m    componentDidMount(){\u001b[0m\n\u001b[0m \u001b[90m 31 | \u001b[39m        \u001b[33mAxios\u001b[39m\u001b[33m.\u001b[39mget(\u001b[32m'http://localhost:5000/api/collections'\u001b[39m)\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 | \u001b[39m        \u001b[33m.\u001b[39mthen(res \u001b[33m=>\u001b[39m ){\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 | \u001b[39m            console\u001b[33m.\u001b[39mlog(flashCards)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m            \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39msetState({ flashCards })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m            \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39msetState({ loading\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m })\u001b[0m","no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-global-assign","no-unsafe-negation"]